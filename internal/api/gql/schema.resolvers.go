package gql

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.40

import (
	"context"

	"github.com/alesr/gqlerrordemo/internal/api/gql/model"
)

// CreateFoo is the resolver for the createFoo field.
func (r *mutationResolver) CreateFoo(ctx context.Context, id string) (*model.Foo, error) {
	f, err := r.FooService.Create(id)
	if err != nil {
		return nil, err
	}

	return &model.Foo{
		ID: f.ID,
	}, nil
}

// GetFoo is the resolver for the getFoo field.
func (r *queryResolver) GetFoo(ctx context.Context, id string) (*model.Foo, error) {
	f, err := r.FooService.Get(id)
	if err != nil {
		return nil, err
	}

	return &model.Foo{
		ID: f.ID,
	}, nil
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
